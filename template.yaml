AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'
Description: Automate an ETL processing pipeline for COVID-19 data using Python and AWS

Resources:
  ETLLambda:
    Type: AWS::Serverless::Function
    DependsOn: COVID19Table
    Properties:
      FunctionName: ETLLambda
      CodeUri: .
      Handler: etl.lambda_handler
      Runtime: python3.8
      Description: A function that performs the ETL job
      MemorySize: 512
      Timeout: 120
      Environment:
        Variables:
          NYT_URL: https://raw.githubusercontent.com/nytimes/covid-19-data/master/us.csv
          JH_URL: https://raw.githubusercontent.com/datasets/covid-19/master/data/time-series-19-covid-combined.csv
          SNS_TOPIC_ARN: !Ref NotifySNS
      Policies:
        - AmazonSNSFullAccess
        - AmazonDynamoDBFullAccess
      Events:
        MyCloudWatchEvent:
          Type: Schedule
          Properties:
            Schedule: cron(00 13 ? * * *)

  NotifyLambda:
    Type: AWS::Serverless::Function
    DependsOn: COVID19Table
    Properties:
      FunctionName: NotifyLambda
      CodeUri: .
      Handler: notify.alert
      Runtime: python3.8
      Description: A function that notifies the subscriber via SNS
      MemorySize: 512
      Timeout: 120
      Environment:
        Variables:
          SNS_TOPIC_ARN: !Ref NotifySNS
      Policies:
        - AmazonSNSFullAccess
        - AmazonDynamoDBFullAccess
      Events:
        Stream:
          Type: DynamoDB
          Properties:
            Enabled: true
            Stream: !GetAtt COVID19Table.StreamArn
            BatchSize: 100
            MaximumBatchingWindowInSeconds: 10
            StartingPosition: LATEST

  COVID19Table:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: covid-19-table
      AttributeDefinitions:
        - AttributeName: date
          AttributeType: S
      KeySchema:
        - AttributeName: date
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST
      StreamSpecification:
        StreamViewType: NEW_IMAGE

  NotifySNS:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: Notify_Subscriber
      Subscription:
        - Endpoint: "pedramadili@gmail.com"
          Protocol: email
